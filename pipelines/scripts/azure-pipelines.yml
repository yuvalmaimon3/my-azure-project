trigger:
- none

pool:
  name: Default

variables:
- name: WORK_DIR
  value: /home/yuval/my-azure-project 

steps:
- script: |
    export TF_VAR_work_dir=$(WORK_DIR)
    echo $TF_VAR_work_dir
    terraform -chdir=$(WORK_DIR)/terraform init
    terraform -chdir=$(WORK_DIR)/terraform apply -auto-approve
  displayName: 'Run Terraform. Create storage network and virtual machine'
  continueOnError: false

# Generate files to upload
- script: |
    chmod +x $(WORK_DIR)/pipelines/scripts/generate-files.sh
    $(WORK_DIR)/pipelines/scripts/generate-files.sh
  displayName: 'Generate Files'
  continueOnError: false

# Export the storage account name to env variable
- script: |
    STORAGE_ACCOUNT_1=$(az deployment group show --resource-group yuval-rg --name storage-deployment --query properties.outputs.storageAccount1Name.value -o tsv)
    STORAGE_ACCOUNT_2=$(az deployment group show --resource-group yuval-rg --name storage-deployment --query properties.outputs.storageAccount2Name.value -o tsv)

    bash $(WORK_DIR)/pipelines/scripts/upload-and-copy-files.sh "$STORAGE_ACCOUNT_1" "$STORAGE_ACCOUNT_2"
  displayName: 'Upload and Copy Files'

# Remove leftovers
- script: |
    rm -rf $(WORK_DIR)/pipelines/temp_blobs/
  displayName: 'Delete Generated Files'
  continueOnError: false

#Update git. inclouding updating terrafrom state files
- script: |
    DATE=$(date '+%Y-%m-%d %H:%M:%S')
    cd /home/yuval/my-azure-project
    git add .
    git commit -m "run $DATE"
    git push
  displayName: 'Update Git'
  continueOnError: false
